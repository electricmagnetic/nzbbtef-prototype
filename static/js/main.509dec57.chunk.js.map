{"version":3,"sources":["assets/logo.svg","components/InputForm.js","components/TokenDisplay.js","nzbbtef/constants.js","nzbbtef/1-colourTransform.js","nzbbtef/2-tokenise.js","components/NZBBTEFVisualise.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Form","props","handleChange","bind","event","this","onFieldChange","target","value","className","htmlFor","id","type","name","onChange","Component","TokenRow","token","key","line","col","colour","tokenised","tokens","TokenTable","map","longColours","longCombinedColours","metal","uncoloured","paleorange","neonorange","fluoroorange","palepink","neonpink","fluoropink","hotpink","crimson","darkpink","lightpurple","paleblue","lightblue","mediumblue","darkblue","neongreen","fluorogreen","lightgreen","limegreen","palegreen","mediumgreen","darkgreen","black","grey","white","red","orange","yellow","pink","purple","blue","green","brown","transform","nzbbtef","colours","Object","keys","reduce","currentSearch","replace","RegExp","colourTransform","symbolBandiser","moo","symbol","match","symbolColour","bandColour","WS","error","idBandiser","inscription","tokeniser","symbolBand","partSeparator","bandSeparator","legSeparator","idBand","colouredBand","tokenise","reset","Array","from","assign","NZBBTEFVisualise","state","handleNZBBTEFChange","setState","two","three","InputForm","length","App","src","logo","alt","href","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.509dec57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9e343206.svg\";","import React, { Component } from 'react';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.props.onFieldChange(event.target.value);\n  }\n\n  render() {\n    return (\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"nzbbtef\">\n            NZBBTEF\n          </label>\n          <input className=\"form-control\" id=\"nzbbtef\" type=\"text\" name=\"nzbbtef\" value={this.props.value} onChange={this.handleChange} />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\n\nimport './TokenDisplay.css';\n\nconst TokenRow = ({ token }) => (\n  <div className=\"col-sm-auto my-2\" key={`${token.line}:${token.col}`}>\n    <div className={`card ${token.type}`}>\n      <div className=\"card-body\">\n        <div className=\"token\">\n          <div className=\"value\"><strong>{token.value}</strong></div>\n          {token.colour\n            ? <div className=\"colour\">{token.colour}</div>\n            : <div className=\"metadata\"><small>{token.type} ({token.col})</small></div>\n          }\n        </div>\n        {token.tokenised && <TokenTable tokens={token.tokenised} />}\n      </div>\n    </div>\n  </div>\n)\n\nconst TokenTable = ({ tokens }) => (\n  <div className=\"form-row my-n2\">\n    {tokens.map(token =>\n      token.type !== 'WS' && <TokenRow token={token} key={`${token.line}:${token.col}`} />\n    )}\n  </div>\n);\n\nexport default TokenTable;\n","// Order is important (from most specific to least specific, e.g. Pale Orange before Orange)\n\nconst longColours = {\n  'Metal': 'M',\n  'Uncoloured': 'M',\n  'Pale Orange': 'PO',\n  'Neon Orange': 'NO',\n  'Fluoro Orange': 'NO',\n  'Pale Pink': 'PP',\n  'Neon Pink': 'NP',\n  'Fluoro Pink': 'NP',\n  'Hot Pink': 'NP',\n  'Dark Pink': 'CP',\n  'Pale Blue': 'PB',\n  'Light Blue': 'LB',\n  'Medium Blue': 'B',\n  'Dark Blue': 'DB',\n  'Neon Green': 'NG',\n  'Fluoro Green': 'NG',\n  'Light Green': 'LG',\n  'Lime Green': 'LG',\n  'Pale Green': 'PG',\n  'Medium Green': 'G',\n  'Dark Green': 'DG',\n  'Light Purple': 'LPu',\n  'Black': 'K',\n  'Grey': 'Gr',\n  'White': 'W',\n  'Red': 'R',\n  'Orange': 'O',\n  'Yellow': 'Y',\n  'Pink': 'P',\n  'Crimson': 'CP',\n  'Purple': 'Pu',\n  'Blue': 'B',\n  'Green': 'G',\n  'Brown': 'Br',\n};\n\nconst longCombinedColours = {\n  metal: 'M',\n  uncoloured: 'M',\n  paleorange: 'PO',\n  neonorange: 'NO',\n  fluoroorange: 'NO',\n  palepink: 'PP',\n  neonpink: 'NP',\n  fluoropink: 'NP',\n  hotpink: 'NP',\n  crimson: 'CP',\n  darkpink: 'CP',\n  lightpurple: 'LPu',\n  paleblue: 'PB',\n  lightblue: 'LB',\n  mediumblue: 'B',\n  darkblue: 'DB',\n  neongreen: 'NG',\n  fluorogreen: 'NG',\n  lightgreen: 'LG',\n  limegreen: 'LG',\n  palegreen: 'PG',\n  mediumgreen: 'G',\n  darkgreen: 'DG',\n  black: 'K',\n  grey: 'Gr',\n  white: 'W',\n  red: 'R',\n  orange: 'O',\n  yellow: 'Y',\n  pink: 'P',\n  purple: 'Pu',\n  blue: 'B',\n  green: 'G',\n  brown: 'Br',\n}\n\nconst shortColours = {\n  M: 'Metal',\n  PO: 'Pale Orange',\n  NO: 'Neon Orange',\n  PP: 'Pale Pink',\n  NP: 'Neon Pink',\n  LPu: 'Light Purple',\n  PB: 'Pale Blue',\n  LB: 'Light Blue',\n  B: 'Medium Blue',\n  DB: 'Dark Blue',\n  NG: 'Neon Green',\n  LG: 'Light Green',\n  L: 'Light Green',\n  PG: 'Pale Green',\n  G: 'Medium Green',\n  DG: 'Dark Green',\n  K: 'Black',\n  Gr: 'Grey',\n  W: 'White',\n  R: 'Red',\n  O: 'Orange',\n  Y: 'Yellow',\n  P: 'Pink',\n  CP: 'Crimson',\n  Pu: 'Purple',\n  Br: 'Brown',\n}\n\nexport { longColours, longCombinedColours, shortColours };\n","import { longColours, longCombinedColours } from './constants';\n\n/**\n This function iterates over the colour object given, doing a (word bounded) find/replace.\n - Use of \\b necessary to not transform PaleBlue to PaleB\n - Double backslash because string escaping necessary\n */\nconst transform = (nzbbtef, colours) => (\n  Object.keys(colours).reduce((nzbbtef, currentSearch) => (\n    nzbbtef.replace(new RegExp(`\\\\b${currentSearch}\\\\b`, 'gi'), colours[currentSearch])\n  ), nzbbtef)\n);\n\nconst colourTransform = (nzbbtef) => (\n  transform(transform(nzbbtef, longColours), longCombinedColours)\n);\n\nexport default colourTransform;\n","import * as moo from 'moo';\n\nlet symbolBandiser = moo.compile({\n  symbol:         {match: /\\S+\\son\\s/, value: value => value.match(/\\S+/)[0]},\n  symbolColour:   /^[a-zA-Z]+/,\n  bandColour:     /[a-zA-Z]+$/,\n  WS:             /[ \\t]+/,\n  error:          moo.error,\n});\n\nlet idBandiser = moo.compile({\n  bandColour:     /^[a-zA-Z]+/,\n  inscription:    {match: /\\(\\S+\\)/, value: value => value.match(/[^()]+/)[0]},\n  error:          moo.error,\n});\n\nlet tokeniser = moo.compile({\n  symbolBand:     /\\w+\\s\\S+\\son\\s\\w+/,\n  partSeparator:  /\\/\\//,\n  bandSeparator:  /\\//,\n  legSeparator:   /-/,\n  idBand:         /[a-zA-Z]*\\(\\S+\\)/,\n  colouredBand:   /[a-zA-Z]+/,\n  WS:             /[ \\t]+/,\n  error:          moo.error,\n});\n\n/**\n Tokenise the string using `moo` as per the rules defined above, then further process certain types further.\n */\nconst tokenise = (nzbbtef) => {\n  tokeniser.reset(nzbbtef);\n\n  return Array.from(tokeniser).map((token) => {\n    switch (token.type) {\n      case 'symbolBand':\n        symbolBandiser.reset(token.value);\n        return Object.assign({}, token, { type: 'tokenisedSymbolBand' }, { tokenised: Array.from(symbolBandiser) });\n      case 'idBand':\n        idBandiser.reset(token.value);\n        return Object.assign({}, token, { type: 'tokenisedIdBand' }, { tokenised: Array.from(idBandiser) });\n      default:\n        return token;\n    }\n  });\n}\n\nexport default tokenise;\n","import React, { Component } from 'react';\n\nimport InputForm from './InputForm';\nimport TokenTable from './TokenDisplay';\n\nimport colourTransform from '../nzbbtef/1-colourTransform';\nimport tokenise from '../nzbbtef/2-tokenise';\n\nclass NZBBTEFVisualise extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nzbbtef: '',\n    };\n\n    this.handleNZBBTEFChange = this.handleNZBBTEFChange.bind(this);\n  }\n\n  handleNZBBTEFChange(nzbbtef) {\n    this.setState({nzbbtef: nzbbtef});\n  }\n\n  render() {\n    const two = colourTransform(this.state.nzbbtef);\n    const three = tokenise(two);\n\n    return (\n      <div className=\"nzbbtef\">\n        <section className=\"my-5\">\n          <h2>1. Input</h2>\n          <p>Enter a band combo in NZBBTEF format.</p>\n          <InputForm\n            onFieldChange={this.handleNZBBTEFChange}\n            value={this.state.nzbbtef}\n          />\n        </section>\n        <section className=\"my-5\">\n          <h2>2. Colour Transformation</h2>\n          <p>\n            The first step is to convert long colour names into short colour names.<br />\n            This is so that colours with two words (e.g. Dark Green) can be appropriately processed.\n          </p>\n          <div className=\"row\">\n            <div className=\"col-md-8 mb-3\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  {two\n                    ? <samp>{two}</samp>\n                    : <span>No input specified</span>\n                  }\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 small\">\n              <ol>\n                <li>Colours can be written as one or two words (Pale Blue or PaleBlue)</li>\n                <li>Colour names are case insensitive</li>\n                <li>Colour names will not feature elsewhere (e.g. as symbols or as inscriptions)</li>\n              </ol>\n            </div>\n          </div>\n        </section>\n        <section className=\"my-5\">\n          <h2>3. Tokenisation</h2>\n          <p>\n            The second step is to recognise the constituent parts in order to figure out the\n            structure of the band combo.\n          </p>\n          <div className=\"row\">\n            <div className=\"col-md-8 mb-3\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  {three && three.length > 0\n                    ? <TokenTable tokens={ three } />\n                    : <span>No input specified</span>\n                  }\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n\n            </div>\n          </div>\n        </section>\n        <section className=\"my-5\">\n          <h2>4. Colour Validation</h2>\n          <em>TODO</em>\n        </section>\n        <section className=\"my-5\">\n          <h2>5. Separator Validation</h2>\n          <em>TODO</em>\n        </section>\n        <section className=\"my-5\">\n          <h2>6. Structure Creation</h2>\n          <em>TODO</em>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default NZBBTEFVisualise;\n","import React from 'react';\n\nimport NZBBTEFVisualise from './components/NZBBTEFVisualise';\nimport logo from './assets/logo.svg';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"bg-light py-5\">\n        <div className=\"container\">\n          <img src={logo} alt=\"NZBBTEF\" className=\"mb-3\" />\n          <h1>Prototype</h1>\n          <p className=\"lead\">\n            New Zealand Bird Band Text Exchange Format\n          </p>\n          <ul className=\"list-unstyled mb-0\">\n            <li><a href=\"https://gist.github.com/georgemoon/0c06e7ad0004ae9c47dd4ac0e1b425d5\">Working Document</a></li>\n            <li><a href=\"https://github.com/electricmagnetic/nzbbtef-prototype\">Prototype Repository</a></li>\n          </ul>\n        </div>\n      </header>\n      <main>\n        <div className=\"container\">\n          <NZBBTEFVisualise />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}